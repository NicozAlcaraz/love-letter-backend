version: "3.12"
name: kishi_backend

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kishi-backend
    command: >
      sh -c "
        python manage.py migrate --no-input &&
        gunicorn kishi_backend.wsgi:application --bind 0.0.0.0:${APP_PORT} --workers 4
      "
    environment:
      DJANGO_SETTINGS_MODULE: kishi_backend.settings
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: backend_db
      DB_PORT: ${DB_PORT}
      STATIC_URL: ${STATIC_URL}
      STATIC_ROOT: ${STATIC_ROOT}
      MEDIA_URL: ${MEDIA_URL}
      MEDIA_ROOT: ${MEDIA_ROOT}
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: "False"
      FRONTEND_DOMAIN: ${FRONTEND_DOMAIN}
    depends_on:
      backend_db:
        condition: service_healthy
    ports:
      - "${APP_PORT}:${APP_PORT}"
    restart: unless-stopped
    working_dir: /app

  backend_db:
    image: postgres:15-alpine
    container_name: kishi-backend-db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - backend-db-data:/var/lib/postgresql/data
    ports:
      - "5543:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $DB_USER -d $DB_NAME"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  backend-db-data:
